
// Job paramaters to set for this environment

// Process setting

process {

  // Global cluster parameters
  cpus = { check_max( 1 * task.attempt, 'cpus' ) }
  memory = { check_max( 8.GB * task.attempt, 'memory' ) }
  time = { check_max( 2.h * task.attempt, 'time' ) }

  errorStrategy = { task.exitStatus in [143,137,140,7] ? 'retry' : 'finish' }
  maxRetries = 3
  maxErrors = '-1'
 
  // Specific cluster parameters for each process

  // software dependencies moved to conda.config

  withName:runFastp {
	memory = { check_max( 8.GB * task.attempt, 'memory' ) }
        time = { check_max( 6.h * task.attempt, 'time' ) }
        cpus = { check_max( 4 , 'cpus' ) }
  }


  withName:runBowtie {
        memory = { check_max( 8.GB * task.attempt, 'memory' ) }
        time = { check_max( 6.h * task.attempt, 'time' ) }
        cpus = { check_max( 4 , 'cpus' ) }
  }

  withName: runMD {
	memory = { check_max( 16.GB * task.attempt, 'memory' ) }
        time = { check_max( 6.h * task.attempt, 'time' ) }
        cpus = { check_max( 4 , 'cpus' ) }

  }

  withName: BloomfilterHost {
	cpus = { check_max( 8 , 'cpus' ) }
  }

  withLabel: std {
	container = 'ikmb/virus-pipe:latest'
  }

  withLabel: pathoscope {
	container = "docker://ikmb/pathoscope2:latest"
  }

  withLabel: kraken {
	container = "docker://quay.io/biocontainers/kraken2:2.0.8_beta--pl526hc9558a2_1"
  }

  withLabel: iva {
	container = "docker://quay.io/biocontainers/iva:1.0.9--py_2"
  }

  withLabel: spades {
	container = "docker://quay.io/biocontainers/spades:3.14.0--h2d02072_0"
  }

  withLabel: quast {
	container = "docker://quay.io/biocontainers/quast:5.0.2--1"
  }

  withLabel: bedtools {
	container = "docker://quay.io/biocontainers/bedtools:2.29.2--hc088bd4_0"
  }

  withLabel: ptrimmer {
	container = "docker://quay.io/biocontainers/ptrimmer:1.3.1--hf89b575_0"
  }
  
  withLabel: fastqpair {
	container = "docker://quay.io/biocontainers/fastq-pair:1.0--hf484d3e_0"
  }

  withName:runPathoscopeMap {
	memory = { check_max( 8.GB * task.attempt, 'memory' ) }
        time = { check_max( 24.h * task.attempt, 'time' ) }
        cpus = { check_max( 8 , 'cpus' ) }
  }
  withName:runPathoscopeId {
        time = { check_max( 6.h * task.attempt, 'time' ) }
  }
  withName: runSpades {
	memory = { check_max( 32.GB * task.attempt, 'memory' ) }
        time = { check_max( 12.h * task.attempt, 'time' ) }
        cpus = { check_max( 8 * task.attempt , 'cpus' ) }

  }

}

